photos: 1m21
gmail: 2m6
chrome: 1m19
spotify: 1m23

Verificar se Ã© melhor reduzir do menor pro maior ou reduzir todas as frequencias ao mesmo tempo
Procurar algum paper sobre response time dos apps

./rdumtool --device-type=UM24C --bluetooth-device=00:BA:55:57:B5:58 --watch 1 --json >> gmail_ondemand.txt

while true; do echo "-----------------------------------------------"; echo "INPUT_BOOST_FREQ"; cat /sys/module/cpu_boost/parameters/input_boost_freq; echo "\nCURFREQ"; cat cpu*/cpufreq/scaling_cur_freq; echo "\nMAXFREQ"; cat cpu*/cpufreq/scaling_max_freq; echo "\nMINFREQ"; cat cpu*/cpufreq/scaling_min_freq; cat cpu*/cpufreq/scaling_governor;cat cpu0/cpufreq/scaling_available_frequencies; echo '\n'; sleep .5; done
echo 0 > cpu1/online;echo 0 > cpu2/online;echo 0 > cpu3/online;
echo 1 > cpu1/online;echo 1 > cpu2/online;echo 1 > cpu3/online;



//                        if (checkLastAppState(lastApp))
//                            saveLastAppState(lastApp)
//                        appConfiguration = usageInfoDAO.getDataFromAppByName(currentApp)
                //The app with this package name does not exist in the DB
                //THIS IS A TOTALLY NEW APP THAT WAS NOT EXECUTED BEFORE
//                        if (appConfiguration.appName == "") {
                //Scale cpu to max
//                            CpuManager.setAllCoresToMax()
//                        } else {
                //Scale cpu to the specific app
//                            CpuManager.scaleCpuToApp(
//                                    appConfiguration.coreFrequencies,
//                                    appConfiguration.coreThresholds
//                            )
//                        }
//                        lastApp = currentApp
//                        clock = 0
//                    } else {
//                        //TODO
//                        //Setar novo threshold quando ja exisita threshold e random deu <9 e usuario n reclamou
//                        clock += readTAinterval
//                        if (clock >= decreaseCPUInterval) {
//                            CpuManager.scaleCpuDown(amountOfFrequencyToReduce)
//                            clock = 0
//                        }
//                    }
//                }
            }
//            else {
//                //Set cpu to min just once
//                if (!needsToReload) {
//                    //Need to save the state of the last running app if it changed
//                    if (checkLastAppState(lastApp))
//                        saveLastAppState(lastApp)
//                    //Set isScreenOn to off
//                    isScreenOn = false
//                    //Set the cpu to min possible
//                    CpuManager.setToMinSpeed()
//                    needsToReload = true
//                    lastApp = ""
//                }
//            }


 # res = str(check_output(
                            #     "adb shell dumpsys battery", shell=True).decode('utf-8'))
                            # if self.device == "Nexus 6":
                            #     res = int(res.replace("\n", ",").strip().split(",")[10].split(":")[1].strip())
                            # elif self.device == "Nexus 5":
                            #     res = int(res.replace("\r\n", ",").strip().split(",")[8].split(":")[1].strip())
                            # if res < 100:
                            #     errorF = open("error_file.txt", "a+")
                            #     errorF.write(
                            #         f"BATERIA ABAIXO DE 100. {self.device}, {gov},{app},{i}\n")
                            #     errorF.close()